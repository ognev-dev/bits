openapi: "3.0.0"
info:
  version: "1"
  title: refto.dev API
  description: Thanks to <a href="https://swagger.io/docs/specification/about/" target="_blank">OpenAPI</a>
#  termsOfService: http://swagger.io/terms/
#  contact:
#    name: Swagger API Team
#    email: apiteam@swagger.io
#    url: http://swagger.io
#  license:
#    name: Apache 2.0
#    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  # %SERVER_URL% is placeholder that will be replaced by server with actual URL
  # this way openapi's server URL will match the server that it is served by
  - url: "%SERVER_URL%"
paths:
  /entities/:
    get:
      tags:
        - Entities
      summary: Get list of entities
      operationId: getEntities
      parameters:
        - $ref: './query-params.yaml#Page'
        - $ref: './query-params.yaml#Limit'
        - name: topics
          in: query
          description: Filter by topics
          required: false
          schema:
            type: array
            items:
              type: string
        - name: addr
          in: query
          description: Filter by ref. address (Get entities that match by substring in `home_addr` property)
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter by name (Get entities that match by substring in `title` property)
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: Search (Get entities that match by substring in their data)
          required: false
          schema:
            type: string
        - name: col
          in: query
          description: Filter entities by collection
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Get entities response
          content:
            application/json:
              schema:
                type: object
                properties:
                  definitions:
                    description: List of definitions
                    type: array
                    items:
                      $ref: './entities.yaml#Entity'
                  entities:
                    description: List of entities
                    type: array
                    items:
                      $ref: './entities.yaml#Entity'
                  entities_count:
                    description: Count of entities that match current filter/search criteria (Or all, if no criteria given)
                    type: integer
                  topics:
                    description: List of topics aggregated from entities that match filter/search criteria. Topics from filter request is excluded from this list.
                    type: string
  /topics/:
    get:
      tags:
        - Topics
      summary: Get list of topics
      operationId: getTopics
      parameters:
        - name: name
          in: query
          description: Filter by name (Get topics that match by substring in `name` property)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of topics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: List of topics
                    type: array
                    items:
                      $ref: './topics.yaml#Topic'
                  count:
                    description: Count of topics
                    type: integer

  /collections/:
    get:
      tags:
        - Collections
      summary: Get list of user's collections
      operationId: getCollections
      parameters:
        - $ref: './query-params.yaml#Page'
        - $ref: './query-params.yaml#Limit'
      responses:
        '200':
          description: List of collections
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: List of collections
                    type: array
                    items:
                      $ref: './collections.yaml#Collection'
                  count:
                    description: Total collections count
                    type: integer
    post:
      tags:
        - Collections
      summary: Create collection
      operationId: createCollection
      requestBody:
        $ref: './collections.yaml#CreateCollectionRequest'
      responses:
        '201':
          description: Created collection
          content:
            application/json:
              schema:
                $ref: './collections.yaml#Collection'

  /collections/{id}/:
    parameters:
      - name: id
        in: path
        description: Collection ID
        required: true
        schema:
          type: integer
          format: int64
    put:
      tags:
        - Collections
      summary: Update collection
      operationId: updateCollection
      requestBody:
        $ref: './collections.yaml#CreateCollectionRequest'
      responses:
        '200':
          description: Updated collection
          content:
            application/json:
              schema:
                $ref: './collections.yaml#Collection'
    delete:
      tags:
        - Collections
      summary: Delete collection
      operationId: deleteCollection
      responses:
        '200':
          $ref: './responses.yaml#SuccessResponse'

  /collections/{collectionID}/entities/{entityID}/:
    parameters:
      - name: collectionID
        in: path
        description: Collection ID
        required: true
        schema:
          type: integer
          format: int64
      - name: entityID
        in: path
        description: Entity ID
        required: true
        schema:
          type: integer
          format: int64
    post:
      tags:
        - Collections
        - Entities
      summary: Add entity to collection
      operationId: addEntityToCollection
      responses:
        '201':
          $ref: './responses.yaml#SuccessResponse'
    delete:
      tags:
        - Collections
        - Entities
      summary: Remove entity from collection
      operationId: removeEntityFromCollection
      responses:
        '200':
          $ref: './responses.yaml#SuccessResponse'
